# vim: set expandtab shiftwidth=2 tabstop=8:

piper_references:
  build_dependencies: &build_dependencies
    FEDORA_RPMS: meson gettext python3 pygobject3-devel python3-lxml libratbag-ratbagd python3-cairo python3-evdev python3-flake8 gtk-update-icon-cache
    UBUNTU_DEBS: meson pkg-config gettext python3 python-gi-dev python3-lxml python3-evdev gir1.2-rsvg-2.0 python3-gi-cairo flake8 ratbagd gtk-update-icon-cache
    ARCH_PKGS: meson libratbag python-cairo python-evdev python-gobject python-lxml gtk-update-icon-cache flake8

  default_settings: &default_settings
    working_directory: ~/piper
    environment:
      LANG: C.UTF-8

  build_default: &build_default
    name: Build
    command: |
      rm -rf builddir
      meson builddir --prefix=/usr -Druntime-dependency-checks=false ${MESON_PARAMS}
      meson configure builddir
      ninja -v -C builddir ${NINJA_ARGS}
  build_buildtype_plain: &build_buildtype_plain
    run:
      <<: *build_default
      name: Build with buildtype plain
      environment:
        MESON_PARAMS: -Dbuildtype=plain
  build_buildtype_release: &build_buildtype_release
    run:
      <<: *build_default
      name: Build with buildtype release
      environment:
        MESON_PARAMS: -Dbuildtype=release
  build_and_test: &build_and_test
    run:
      <<: *build_default
      name: Build and test
      environment:
        NINJA_ARGS: test
  install: &install
    run:
      name: Installing
      command: ninja -C builddir install
  export_logs: &export_logs
    store_artifacts:
      path: ~/piper/build/meson-logs

save_date: &save_date
  run:
    name: Save date
    command: date +%F > /tmp/date

fedora_save_cache: &fedora_save_cache
  save_cache:
    key: fedora-cache-v1-{{ checksum "/tmp/date" }}
    paths:
      - /var/cache/dnf

fedora_fetch_cache: &fedora_fetch_cache
  restore_cache:
    keys:
      - fedora-cache-v1

fedora_settings: &fedora_settings
  <<: *default_settings
  steps:
    - *save_date
    - *fedora_fetch_cache
    - run:
        name: Install prerequisites
        command: |
          dnf install -y tree git diffutils ${FEDORA_RPMS}
    - checkout
    - *build_and_test
    - *install
    - *build_buildtype_plain
    - *build_buildtype_release
    - *export_logs
    - *fedora_save_cache
  environment:
    *build_dependencies

arch_save_cache: &arch_save_cache
  save_cache:
    key: arch-cache-v1-{{ checksum "/tmp/date" }}
    paths:
      - /var/cache/pacman/pkg

arch_fetch_cache: &arch_fetch_cache
  restore_cache:
    keys:
      - arch-cache-v1

arch_settings: &arch_settings
  <<: *default_settings
  steps:
    - *save_date
    - *arch_fetch_cache
    - run:
        name: Install prerequisites
        command: pacman -Syu --noconfirm --noprogressbar --needed base-devel git ${ARCH_PKGS}
    - checkout
    - *build_and_test
    - *install
    - *build_buildtype_plain
    - *build_buildtype_release
    - *export_logs
    - *arch_save_cache
  environment:
    *build_dependencies

ubuntu_settings: &ubuntu_settings
  <<: *default_settings
  steps:
    - run:
        name: Install prerequisites
        command: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y tree git ${UBUNTU_DEBS}
    - checkout
    - *build_and_test
    - *install
    - *build_buildtype_plain
    - *build_buildtype_release
    - *export_logs
  environment:
    *build_dependencies

version: 2
jobs:
  fedora_31:
    <<: *fedora_settings
    docker:
      - image: fedora:31
  arch:
    <<: *arch_settings
    docker:
      - image: archlinux
  ubuntu_20_04:
    <<: *ubuntu_settings
    docker:
      - image: ubuntu:20.04

workflows:
  version: 2
  compile_and_test:
    jobs:
      - ubuntu_20_04
      - fedora_31
      - arch
